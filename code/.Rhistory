))) %>%
mutate(owner_type_code = as.factor(case_when(
owner_type_code == 1 ~ "city",
owner_type_code == 2 ~ "county",
owner_type_code == 3 ~ "federal",
owner_type_code == 4 ~ "private",
owner_type_code == 5 ~ "state",
owner_type_code == 6 ~ "tribal",
owner_type_code == 7 ~ "other",
owner_type_code == 8 ~ "port",
owner_type_code == 9 ~ "drainage district",
owner_type_code == 11 ~ "irrigation district",
owner_type_code == 12 ~ "unknown"
))) %>%
mutate(fish_use_code = as.factor(case_when(
fish_use_code == 0 ~ "NA", #Think we should keep NAs?
fish_use_code == 10 ~ "yes",
fish_use_code == 20 ~ "no",
fish_use_code == 99 ~ "unknown"
))) %>%
mutate(significant_reach_code = as.factor(case_when(
significant_reach_code == 0 ~ "NA",
significant_reach_code == 10 ~ "yes",
significant_reach_code == 20 ~ "no",
significant_reach_code == 99 ~ "unknown"
)))
# Filter out non barrier culverts
sf_case_culverts = sf_case_culverts %>%
filter(percent_fish_passable_code != "100") %>%
filter(fish_use_code != "no") %>%
filter(fish_passage_barrier_status_code != "non-barrier")
#I loaded in the data and did a bunch of summary stats within the wdfw_explore file. This next bit of code will not work unless you run the code from that other file.
mean(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE) #answer 13.1
median(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE) #answer 11
range(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE) #answer 0, 82
sd(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE) #answer 8.6
shapiro.test(sf_case_culverts$priority_index_total_quantity) #p<2.2e-16 not normal
IQR(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE) #IQR = 10.11
quantile(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE)
#0%    25%    50%    75%   100%
#0.000  7.165 11.140 17.275 82.030
skewness(sf_case_culverts$priority_index_total_quantity, na.rm=TRUE) #1.63
WDFW <- sf_case_culverts %>%
ggplot(aes(x=priority_index_total_quantity, na.rm=TRUE))+
geom_rect(aes(xmin = 7.17, xmax = 17.28, ymin = 0, ymax = 300), fill = "pink1",alpha = 0.1)+
geom_histogram(bins = 100) +
geom_vline(xintercept=13.1, color = "red")+
geom_vline(xintercept = 11, linetype = "dashed", color = "red")+
theme_classic()+
theme(plot.title = element_text(size = 11),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())+
scale_x_continuous(expand = c(0,0),
limits = c(0,100))+
scale_y_continuous(expand= c(0,0))+
xlab(element_blank())+
ylab(element_blank())+
ggtitle("WDFW")+
annotate(geom = "text", y = 150, x = 80, label = "n = 4259", size=3.5) +
annotate(geom = "text", y = 115, x = 80, label = "skew = 1.63", size=3.5)
WDFW
#-----------------------------------------
#CWCC PI
#Import Data
CWCC <- read_csv(here("Data/CWCCResults.csv"))
#Filter for Barrier Culverts with Score
CWCC %>%
dplyr::select(`Unique ID`, `Barrier Type`, `Total Prioritization Score`) %>%
filter(`Barrier Type` == "Culvert")->
CWCCFiltered
#Summary Stats, n = 697
mean(CWCCFiltered$`Total Prioritization Score`) #41.5
median(CWCCFiltered$`Total Prioritization Score`) #41.6
range(CWCCFiltered$`Total Prioritization Score`) #14.0, 83.3
sd(CWCCFiltered$`Total Prioritization Score`) #10.33
IQR(CWCCFiltered$`Total Prioritization Score`) #IQR:14.775
quantile(CWCCFiltered$`Total Prioritization Score`)
#0%    25%    50%    75%   100%
#14.025 33.900 41.625 48.675 83.275
skewness(CWCCFiltered$`Total Prioritization Score`) #0.195
#Test for normal distribution
shapiro.test(CWCCFiltered$`Total Prioritization Score`) #p=0.003 Not Normal
#Plot Histogram
P2 <- CWCCFiltered %>%
ggplot(aes(x=`Total Prioritization Score`))+
geom_rect(aes(xmin = 33.9, xmax = 48.68, ymin = 0, ymax = 35), fill = "pink1",alpha = 0.1)+
geom_histogram(bins = 100)+
geom_vline(xintercept=41.5, color = "red")+
geom_vline(xintercept = 41.6, linetype = "dashed", color = "red")+
theme_classic()+
theme(plot.title = element_text(size = 11),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())+
scale_x_continuous(expand = c(0,0),
limits = c(0,100))+
scale_y_continuous(expand= c(0,0),
breaks = c(10, 20, 30))+
xlab(element_blank())+
ylab(element_blank())+
ggtitle("CWCC")+
annotate(geom = "text", y = 20, x = 80, label = "n = 697", size=3.5) +
annotate(geom = "text", y = 14, x = 80, label = "skew = 0.195", size=3.5)
P2
#Import Data
bham <- read_csv(here("data/2019_bellingham_ranking/bellingham_scores.csv"))
#Summary Stats, n = 32
mean(bham$SCORE) #10.5
median(bham$SCORE) #11
range(bham$SCORE) #5, 15.7
sd(bham$SCORE) #2.96
IQR(bham$SCORE) #5.225
quantile(bham$SCORE)
#0%    25%    50%    75%   100%
#5.000  8.000 11.000 13.225 15.700
skewness(bham$SCORE) #-0.079
#Test for normal distribution
shapiro.test(bham$SCORE) #p<0.19 Normal
#Plot Histogram
#multiplied by 3.125 to normalize score to 100
P3 <-bham %>%
ggplot(aes(x=SCORE*3.125))+
geom_rect(aes(xmin = 8*3.125, xmax = 13.23*3.125, ymin = 0, ymax = 4), fill = "pink1",alpha = 0.1)+
geom_histogram(bins = 100)+
theme_classic()+
theme(plot.title = element_text(size = 11),
axis.title = element_text(size=10),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())+
scale_x_continuous(expand = c(0,0),
limits = c(0,100),
breaks = c(0, 25, 50, 75, 100))+
scale_y_continuous(expand= c(0,0),
breaks = c(1, 2, 3, 4))+
xlab(element_blank())+
ylab(element_blank())+
geom_vline(xintercept=10.5*3.125, color = "red")+
geom_vline(xintercept = 11*3.125, linetype = "dashed", color = "red")+
ggtitle("Bellingham")+
annotate(geom = "text", y = 2.3, x = 80, label = "n = 32", size=3.5)+
xlab("Barrier Culvert PI Scores")+
annotate(geom = "text", y = 1.7, x = 80, label = "skew = -0.079", size=3.5)
P3
#Import Data
chehalis <- read_csv(here("data/Chehalis/wdfw_chehalis_ranking.csv"))
#Subset for barrier culverts with scores
chehalis %>%
filter(FeatureType == "Culvert")->
chehalisFiltered
#Summary Stats, n = 1946
mean(chehalisFiltered$Score) #46.9
median(chehalisFiltered$Score) #46.3
range(chehalisFiltered$Score) #25.3, 87.7
sd(chehalisFiltered$Score) #8.77
IQR(chehalisFiltered$Score) #IQR = 11.33
quantile(chehalisFiltered$Score)
#0%      25%      50%      75%     100%
#25.33333 40.66667 46.33333 52.00000 87.66667
skewness(chehalisFiltered$Score) #0.708
#Test for normal distribution
shapiro.test(chehalisFiltered$Score) #p<2.2e-16
#Plot Histogram
#Multiplied by 0.8 to normalize to 100
P4 <- chehalisFiltered%>%
ggplot(aes(x=Score*0.8))+
geom_rect(aes(xmin = 40.67*0.8, xmax = 52*0.8, ymin = 0, ymax = 150), fill = "pink1",alpha = 0.1)+
geom_histogram(bins=100)+
theme_classic()+
theme(plot.title = element_text(size = 11),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())+
scale_x_continuous(expand = c(0,0),
limits = c(0,100))+
scale_y_continuous(expand= c(0,0),
breaks = c(50, 100, 150))+
xlab(element_blank())+
ylab(element_blank())+
geom_vline(xintercept=46.9*0.8, color = "red")+
geom_vline(xintercept = 46.3*0.8, linetype = "dashed", color = "red")+
ggtitle("Chehalis")+
annotate(geom = "text", y = 100, x = 80, label = "n = 1946", size=3.5)+
annotate(geom = "text", y = 75, x = 80, label = "skew = 0.708", size=3.5)
P4
#Import Data
Thurston <- read_excel(here("data/Thurston/Fixed Thurston County FP Potential Project List.xlsx"))
#Filtering out non-barriers
Thurston %>%
filter(TotalScore > 0)->
ThurstonF
#Summary Stats, n = 297
mean(ThurstonF$TotalScore) #20.6
median(ThurstonF$TotalScore) #12
range(ThurstonF$TotalScore) #1, 86
sd(ThurstonF$TotalScore) #18.9
IQR(ThurstonF$TotalScore)
quantile(ThurstonF$TotalScore)
#0%  25%  50%  75% 100%
#1    5   12   34   86
skewness(ThurstonF$TotalScore) #1.02
#Test for normal distribution
shapiro.test(ThurstonF$TotalScore) #p<3.4e-16
#Plot Histogram
#Multiplied by 1.05 to normalize to 100
P5 <- ThurstonF%>%
ggplot(aes(x=TotalScore*1.05))+
geom_rect(aes(xmin = 5*1.05, xmax = 34*1.05, ymin = 0, ymax = 50), fill = "pink1",alpha = 0.1)+
geom_histogram(bins=100)+
theme_classic()+
theme(plot.title = element_text(size = 11),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank())+
scale_x_continuous(expand = c(0,0),
limits = c(0, 100))+
scale_y_continuous(expand= c(0,0),
breaks = c(15, 30, 45))+
xlab(element_blank())+
ylab(element_blank())+
geom_vline(xintercept=20.6*1.05, color = "red")+
geom_vline(xintercept = 12*1.05, linetype = "dashed", color = "red")+
ggtitle("Thurston")+
annotate(geom = "text", y = 30, x = 80, label = "n = 297", size=3.5) +
annotate(geom = "text", y = 20, x = 80, label = "skew = 1.02", size=3.5)
P5
-------------------------------------
#Combine all of the plots
histogram <- WDFW/P4/P2/P5/P1/P3
#Output figure
ggsave("histogram.tiff", path = here("output/DistributionFigures"), plot=histogram, device=agg_tiff,
height = 8.5, width = 4, dpi = 300)
-------------------------------------
#Combine all of the plots
histogram <- WDFW/P4/P2/P5/P1/P3
library(patchwork)
library(plotly)
-------------------------------------
#Combine all of the plots
histogram <- WDFW/P4/P2/P5/P1/P3
histogram <- WDFW/P4/P2/P5/P1/P3
histogram
#Output figure
ggsave("histogram.tiff", path = here("output/DistributionFigures"), plot=histogram, device=agg_tiff,
height = 8.5, width = 4, dpi = 300)
#Output figure
ggsave("histogram.tiff", path = here("output/Figure2"), plot=histogram, device=agg_tiff,
height = 8.5, width = 4, dpi = 300)
#Output figure
ggsave("Figure2.tiff", path = here("output/Figures"), plot=histogram, device=agg_tiff,
height = 8.5, width = 4, dpi = 300)
#load libraries
library(readxl)
library(here)
library(tidyverse)
library(shades)
library(patchwork)
library(ragg)
-------------------------
#Panel A & B
#load data
Variable<- read_excel(here("output/Compare_Contrast Data/Variable Comparisons.xlsx"))
library(ragg)
Variable<- read_excel(here("output/Compare_Contrast Data/Variable Comparisons.xlsx"))
Variable<- read_excel(here("output/Compare_Contrast Data/Variable Comparisons.xlsx"))
#Panel A
AllPIVar <- Variable %>%
ggplot(aes(y=reorder(J2, desc(percentshared)), x=percentshared))+
geom_bar(stat = "identity", na.rm = T)+
theme_classic()+
theme(axis.ticks = element_blank(),
legend.position = "none",
plot.title = element_text(face = "bold", hjust = 1))+
scale_y_discrete(expand = c(0,0),
na.translate = F)+
scale_x_continuous(expand = c(0,0),
limits = c(0, 101))+
labs(x="% Shared Metrics", y=element_blank(), title = "A.")
library(ragg)
library(ragg)
#Panel A
AllPIVar <- Variable %>%
ggplot(aes(y=reorder(J2, desc(percentshared)), x=percentshared))+
geom_bar(stat = "identity", na.rm = T)+
theme_classic()+
theme(axis.ticks = element_blank(),
legend.position = "none",
plot.title = element_text(face = "bold", hjust = 1))+
scale_y_discrete(expand = c(0,0),
na.translate = F)+
scale_x_continuous(expand = c(0,0),
limits = c(0, 101))+
labs(x="% Shared Metrics", y=element_blank(), title = "A.")
AllPIVar
#Panel B
AllCat <- Variable %>%
ggplot(aes(y=reorder(category_2, desc(percent_shared)), x=percent_shared))+
geom_bar(stat = "identity", na.rm = T)+
theme_classic()+
theme(axis.ticks = element_blank(),
legend.position = "none",
plot.title = element_text(face = "bold", hjust = 1))+
scale_y_discrete(expand = c(0,0),
na.translate = F)+
scale_x_continuous(expand = c(0,0),
limits = c(0,101))+
labs(x="% Shared Metrics", y=element_blank(), title = "B.")
AllCat
-------------------------
#Panel C
#load data
Weight <- read_excel(here("output/Compare_Contrast Data/Linear Scoring Weight Analysis.xlsx"))
#create custom color palette for plot
pal <- c("#a6cee3",
"#1f78b4",
"#b2df8a",
"#33a02c",
"#fb9a99",
"#e31a1c",
"#fdbf6f")
#Plot
WPFlipped <- Weight %>%
filter(Jurisdiction!= "CWCCReport") %>%
ggplot(aes(fill=BroadCat, y=Jurisdiction, x=Weight*100))+
geom_bar(position="stack", stat="identity")+
theme_classic()+
theme(axis.ticks = element_blank(),
plot.title = element_text(face = "bold", hjust = 1))+
scale_fill_manual(values=saturation(pal, delta(-0.2)))+
scale_y_discrete(expand = c(0,0),
limits=c("Chehalis", "CWCC", "King", "Bellingham", "Thurston"))+
scale_x_continuous(expand = c(0,0))+
labs(x="% Scoring Weight", y=element_blank(), fill=element_blank(), title = "C.")
Weight <- read_excel(here("output/Compare_Contrast Data/Linear Scoring Weight Analysis.xlsx"))
#create custom color palette for plot
pal <- c("#a6cee3",
"#1f78b4",
"#b2df8a",
"#33a02c",
"#fb9a99",
"#e31a1c",
"#fdbf6f")
#Plot
WPFlipped <- Weight %>%
filter(Jurisdiction!= "CWCCReport") %>%
ggplot(aes(fill=BroadCat, y=Jurisdiction, x=Weight*100))+
geom_bar(position="stack", stat="identity")+
theme_classic()+
theme(axis.ticks = element_blank(),
plot.title = element_text(face = "bold", hjust = 1))+
scale_fill_manual(values=saturation(pal, delta(-0.2)))+
scale_y_discrete(expand = c(0,0),
limits=c("Chehalis", "CWCC", "King", "Bellingham", "Thurston"))+
scale_x_continuous(expand = c(0,0))+
labs(x="% Scoring Weight", y=element_blank(), fill=element_blank(), title = "C.")
---------------
#Combine and Export Plot
Figure3 <- (AllPIVar + AllCat + WPFlipped)
Figure3 <- (AllPIVar + AllCat + WPFlipped)
#Plot
WPFlipped <- Weight %>%
filter(Jurisdiction!= "CWCCReport") %>%
ggplot(aes(fill=BroadCat, y=Jurisdiction, x=Weight*100))+
geom_bar(position="stack", stat="identity")+
theme_classic()+
theme(axis.ticks = element_blank(),
plot.title = element_text(face = "bold", hjust = 1))+
scale_fill_manual(values=saturation(pal, delta(-0.2)))+
scale_y_discrete(expand = c(0,0),
limits=c("Chehalis", "CWCC", "King", "Bellingham", "Thurston"))+
scale_x_continuous(expand = c(0,0))+
labs(x="% Scoring Weight", y=element_blank(), fill=element_blank(), title = "C.")
Figure3
ggsave("Figure3.tiff", plot = VariableComparison, path = here("output/Figures"),
device = agg_tiff, width = 10, height = 3)
ggsave("Figure3.tiff", plot = Figure3, path = here("output/Figures"),
device = agg_tiff, width = 10, height = 3)
#----------------------------------
#Figure 4
#creating dummy models where M and D are held constant
HighCost <- data.frame(B=1, P=3, H=1:5000, Scenario = "Low Cost", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
MedCost <- data.frame(B=1, P=3, H=1:5000, Scenario = "Medium Cost", M=2, D=1, C=2) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
LowCost <- data.frame(B=1, P=3, H=1:5000, Scenario = "High Cost", M=2, D=1, C=1) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#merging the datasets
Cost = rbind(HighCost, MedCost, LowCost)
Figure4 <- ggplot(data = Cost, aes(x = H, y = PI, color = Scenario))+
geom_line()+
theme_classic()+
geom_hline(yintercept = 13)+
geom_vline(xintercept = c(1586, 2380, 4760), linetype = "dashed")+
geom_segment(aes(x = 0, y = 0, xend = 4760, yend = 0), color = "#e41a1c")+
annotate(geom = "text", x = 4500, y = 1, label = "1", color = "#e41a1c")+
geom_segment(aes(x = 0, y = 1, xend = 2380, yend = 1), color = "#377eb8")+
annotate(geom = "text", x = 2100, y = 2, label = "1/2", color = "#377eb8")+
geom_segment(aes(x = 0, y = 2, xend = 1586, yend = 2), color = "#4daf4a")+
annotate(geom = "text", x = 1300, y = 3, label = "1/3", color = "#4daf4a")+
scale_y_continuous(breaks = c(3, 9, 13, 17))+
scale_x_continuous(breaks = c(1586, 2380, 4760),
expand = c(0,0))+
labs(x = expression(Upstream~lineal~habitat~gain~m^2), y = "PI Score") +
scale_color_manual(breaks = c("Low Cost", "Medium Cost", "High Cost"),
values = c("#4daf4a", "#377eb8", "#e41a1c"))
Figure4
#Export
ggsave(dpi = 300, units = "in", here("output/Figures","Figure4.tiff"), plot = Figure4,
device = agg_tiff, width = 5, height = 4)
#----------------------------------
#Figure 5
#Create dummy dataframes for each species and each run type
#ESA listing status in case area was referenced from salmonscape
#Chinook
CoastChinook<- data.frame(B=1, P=0.016, H=1:5000, Species = "Chinook Salmon", ESA = "Not listed",Run = "WA Coast", Scenario = "Real", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetChinook <- data.frame(B=1, P=0.016, H=1:5000, Species = "Chinook Salmon", ESA = "Listed", Run = "Puget Sound", Scenario = "Real", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
ChinookS<- data.frame(B=1, P=0.016, H=1:5000, Species = "Chinook Salmon", ESA = "Species of concern",Run = "WA Coast", Scenario = "Scenario", M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Coho
OPCoho<- data.frame(B=1, P=0.05, H=1:5000, Species = "Coho Salmon", ESA = "Not listed", Run = "Olympic Peninsula/SW WA", Scenario = "Real", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetCoho <- data.frame(B=1, P=0.05, H=1:5000, Species = "Coho Salmon", ESA = "Species of concern", Run = "Puget Sound", Scenario = "Real", M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
CohoS<- data.frame(B=1, P=0.05, H=1:5000, Species = "Coho Salmon", ESA = "Listed", Run = "Olympic Peninsula/SW WA", Scenario = "Scenario", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Sockeye
PlesantSockeye <- data.frame(B=1, P=3, H=1:5000, Species = "Sockeye Salmon", ESA = "Listed", Run = "Lake Plesant",  Scenario = "Real", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
QuinaltSockeye <- data.frame(B=1, P=3, H=1:5000, Species = "Sockeye Salmon", ESA = "Not listed", Run = "Quinalt/Baker River", Scenario = "Real",  M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
SockeyeS <- data.frame(B=1, P=3, H=1:5000, Species = "Sockeye Salmon", ESA = "Species of concern", Run = "Quinalt/Baker River", Scenario = "Scenario",  M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Bull
Bull_Dolly <- data.frame(B=1, P=0.0007, H=1:5000, Species = "Bull Trout/Dolly Varden", ESA = "Not listed", Run = "NA", Scenario = "Real", M=1, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
BullDollyS2 <- data.frame(B=1, P=0.0007, H=1:5000, Species = "Bull Trout/Dolly Varden", ESA = "Species of concern", Run = "NA", Scenario = "Scenario", M=1, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
BullDollyS3 <- data.frame(B=1, P=0.0007, H=1:5000, Species = "Bull Trout/Dolly Varden", ESA = "Listed", Run = "NA", Scenario = "Scenario", M=1, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Rainbow
Rainbow <- data.frame(B=1, P=0.04, H=1:5000, Species = "Rainbow Trout", ESA = "Not listed", Run = "NA", Scenario = "Real", M=1, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
RainbowS2 <- data.frame(B=1, P=0.04, H=1:5000, Species = "Rainbow Trout", ESA = "Species of concern", Run = "NA", Scenario = "Scenario", M=1, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
RainbowS3 <- data.frame(B=1, P=0.04, H=1:5000, Species = "Rainbow Trout", ESA = "Listed", Run = "NA", Scenario = "Scenario", M=1, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Chum
HoodChum <- data.frame(B=1, P=1.25, H=1:5000, Species = "Chum Salmon", ESA = "Listed", Run = "Hood River", Scenario = "Real", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
CoastChum <- data.frame(B=1, P=1.25, H=1:5000, Species = "Chum Salmon", ESA = "Not listed", Run = "Pacific Coast/Puget Sound", Scenario = "Real", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
CoastChumS <- data.frame(B=1, P=1.25, H=1:5000, Species = "Chum Salmon", ESA = "Species of concern", Run = "Pacific Coast/Puget Sound", Scenario = "Scenario", M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Pink
OddPink <- data.frame(B=1, P=1.25, H=1:5000, Species = "Pink Salmon", ESA = "Not listed", Run = "Odd/Even", Scenario = "Real", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
OddPinkS2 <- data.frame(B=1, P=1.25, H=1:5000, Species = "Pink Salmon", ESA = "Species of concern", Run = "Odd/Even", Scenario = "Scenario", M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
OddPinkS3 <- data.frame(B=1, P=1.25, H=1:5000, Species = "Pink Salmon", ESA = "Listed", Run = "Odd/Even", Scenario = "Scenario", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Steelhead
OPSteelhead <- data.frame(B=1, P=0.0021, H=1:5000, Species = "Steelhead", ESA = "Not listed", Run = "Olympic Penninsula", Scenario = "Real", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetSteelhead <- data.frame(B=1, P=0.0021, H=1:5000, Species = "Steelhead", ESA = "Listed", Run = "Puget/SW WA", Scenario = "Real", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
PugetSteelheadS <- data.frame(B=1, P=0.0021, H=1:5000, Species = "Steelhead", ESA = "Species of concern", Run = "Puget/SW WA", Scenario = "Scenario", M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Cutthroat
Cutthroat <- data.frame(B=1, P=0.037, H=1:5000, Species = "Cutthroat Trout", ESA = "Not listed", Run = "NA", Scenario = "Real", M=2, D=1, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
CutthroatS2 <- data.frame(B=1, P=0.037, H=1:5000, Species = "Cutthroat Trout", ESA = "Species of concern", Run = "NA", Scenario = "Scenario", M=2, D=2, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
CutthroatS3 <- data.frame(B=1, P=0.037, H=1:5000, Species = "Cutthroat Trout", ESA = "Listed", Run = "NA", Scenario = "Scenario", M=2, D=3, C=3) %>%
mutate(PI = (B*P*H*M*D*C)^(1/4))
#Join all the dataframes so that they can be plotted together
SpeciesJoin = rbind(Cutthroat, PugetSteelhead, OPSteelhead, OddPink,
CoastChum, HoodChum, Rainbow, Bull_Dolly, QuinaltSockeye, PlesantSockeye,
PugetCoho, OPCoho, CoastChinook, PugetChinook, ChinookS, CohoS, SockeyeS, BullDollyS3, BullDollyS2, RainbowS2, RainbowS3, CoastChumS, OddPinkS3, OddPinkS2, PugetSteelheadS, CutthroatS3, CutthroatS2)
#Plot Figure
Figure5 <- SpeciesJoin %>%
mutate(Species = fct_reorder(Species, desc(P))) %>%
ggplot(aes(x=H, y=PI, color=ESA))+
geom_line(size=.8, aes(linetype = Scenario))+
scale_color_manual(values=c("#e41a1c", "#377eb8", "#4daf4a"),
limits = c("Listed", "Species of concern", "Not listed"))+
facet_wrap(~Species)+
theme_classic()+
theme(strip.background=element_blank())+
scale_linetype_manual(values = c("solid", "dotted"),
guide = "none") +
scale_x_continuous(expand = c(0,0),
breaks = c(1000, 3000, 5000))+
scale_y_continuous(expand= c(0,0))+
labs(x = "Habitat Quanity (m)", y = "PI Score")
Figure5
ggsave(dpi = 300, units = "in", here("output/Figures","Figure5.tiff"), plot = Figure5,
device = agg_tiff)
#Save Plot
ggsave(dpi = 300, units = "in", here("output/Figures","Figure5rough.tiff"), plot = Figure5,
device = agg_tiff)
#Save Plot
ggsave(dpi = 300, units = "in", here("output/Figures","Figure5draft.tiff"), plot = Figure5,
device = agg_tiff)
#Save Plot
ggsave(dpi = 300, units = "in", here("output/Figures","Figure5draft.tiff"), plot = Figure5,
device = agg_tiff, width = 5, height = 5)
