CaseAreaMap <- ggplot() +
geom_sf(data = counties, fill = "grey") +
geom_sf(data = sf_case, fill = "red", color = "red", alpha = .5) +
theme_void()+
theme(legend.position = "none",
panel.background = element_rect(fill = "lightcyan"))
#-----------Load Libraries
library(sf)
library(spData)
library(tidyverse)
library(here)
library(janitor)
library(patchwork)
library(readxl)
library(ggplot2)
library(rnaturalearth)
library(mapproj)
library(maps)
#----------Inset Plot
#'#Load Data
#Counties Data
counties <- read_sf(here("data", "cb_2018_us_county_5m", "cb_2018_us_county_5m.shp"))
counties = counties %>%
filter(STATEFP == "53") %>%
mutate(GEOID = as.numeric(GEOID)) %>%
rename(COUNTY = GEOID)
# Case area borders
sf_case <- st_read(here("data/WSDOT_-_Fish_Passage_US_v._WA_Case_Area_Boundary-shp/WSDOT_-_Fish_Passage_US_v._WA_Case_Area_Boundary.shp"), quiet = TRUE)
CaseAreaMap <- ggplot() +
geom_sf(data = counties, fill = "grey") +
geom_sf(data = sf_case, fill = "red", color = "red", alpha = .5) +
theme_void()+
theme(legend.position = "none",
panel.background = element_rect(fill = "lightcyan"))
CaseAreaMap
#Black and white version
CaseAreaMapBW <- ggplot() +
geom_sf(data = counties, fill = "white") +
geom_sf(data = sf_case, fill = "grey50", color = "grey", alpha = .5) +
theme_void()+
theme(legend.position = "none")
CaseAreaMapBW
ggsave(plot = CaseAreaMapBW, path = here("output/Maps"), filename = "CaseArea.jpg", device = "jpg")
# Load coastline data
na_countries <- ne_countries(scale = 50, returnclass = "sf", continent = "North America")
install.packages("rnaturalearthdata")
library(rnaturalearthdata)
#----------Inset Plot
#'#Load Data
#Counties Data
counties <- read_sf(here("data", "cb_2018_us_county_5m", "cb_2018_us_county_5m.shp"))
#----------Inset Plot
#'#Load Data
#Counties Data
counties <- read_sf(here("data", "cb_2018_us_county_5m", "cb_2018_us_county_5m.shp"))
counties = counties %>%
filter(STATEFP == "53") %>%
mutate(GEOID = as.numeric(GEOID)) %>%
rename(COUNTY = GEOID)
# Case area borders
sf_case <- st_read(here("data/WSDOT_-_Fish_Passage_US_v._WA_Case_Area_Boundary-shp/WSDOT_-_Fish_Passage_US_v._WA_Case_Area_Boundary.shp"), quiet = TRUE)
CaseAreaMap <- ggplot() +
geom_sf(data = counties, fill = "grey") +
geom_sf(data = sf_case, fill = "red", color = "red", alpha = .5) +
theme_void()+
theme(legend.position = "none",
panel.background = element_rect(fill = "lightcyan"))
CaseAreaMap
#Black and white version
CaseAreaMapBW <- ggplot() +
geom_sf(data = counties, fill = "white") +
geom_sf(data = sf_case, fill = "grey50", color = "grey", alpha = .5) +
theme_void()+
theme(legend.position = "none")
CaseAreaMapBW
ggsave(plot = CaseAreaMapBW, path = here("output/Maps"), filename = "CaseArea.jpg", device = "jpg")
# Load coastline data
na_countries <- ne_countries(scale = 50, returnclass = "sf", continent = "North America")
# Define a Lambert Conformal Conic projection
crs_albers <- "+proj=utm +zone=10 +datum=WGS84"
# Calculate the bounding box of the states
bbox <- st_bbox(sf_case)
# Create a rectangle for the bounding box
bbox_rect <- st_as_sfc(bbox)
# Plotting with Albers projection
map_key <- ggplot() +
geom_sf(data = na_countries, color = "black") +
geom_sf(data = bbox_rect, fill = NA, color = "black", linewidth = .8) + # Add the bounding box
coord_sf(crs = crs_albers, expand = FALSE) +
theme_minimal() +
xlab("") +
ylab("") +
theme_void()
# Display the plot
map_key
ggsave(here("inset_map.png"), plot = map_key, width = 5, height = 5, dpi = 300)
#---------------Overview Map
#Inputting the WRIA data
st_layers(dsn = here("data/WR_WAT_WRIA.gdb")) #layer name: Water_Resource_Inventory_Areas
wria <- read_sf(dsn = here("data/WR_WAT_WRIA.gdb"), layer = "Water_Resource_Inventory_Areas")
#Inputting Bellingham geometry
bham <- read_sf(here("data/bham_geom/COB_plan_CityUGAs.shp"))
#change CRS
bham.crs <- st_transform(bham, crs = st_crs(counties))
bham.crs <- bham.crs %>%
filter(CITYUGA == "CITY")
wria.crs <- st_transform(wria, crs = st_crs(counties))
#Next I would like to create a cropped version
#First I'll make a bounding box within the Case Area for the county and the WRIA geometries
counties.crop <- st_crop(counties,
xmin = -125.124714, xmax = -120.543683,
ymin = 46.197092, ymax = 49.002210)
wria.crop <- st_crop(wria.crs,
xmin = -125.124714, xmax = -120.543683,
ymin = 46.197092, ymax = 49.002210)
#Creating centroids for the WRIA names
wria.cents <- cbind(wria.crop, st_coordinates(st_centroid(wria.crop %>% select(Shape))))
#Here is the cropped plot showing the case area with all the counties and the wria's
ggplot() +
geom_sf(data = wria.crop, alpha = 0)+
geom_sf(data = counties.crop, alpha = 0)+
geom_sf(data = sf_case, alpha = 0, color = "red") +
theme_void()+
theme(legend.position = "none") +
geom_text(data = wria.cents, aes(x = X, y = Y, label = WRIA_ID))
#now I'm going to start subsetting to create layers that show the different PI's
#I want to merge the WRIA ID for each PI so that the geometries aren't divided by wria boundaries
cwcc <- wria.crop %>%
filter(WRIA_ID %in% c(15, 35)) %>%
summarise(geometry = sf::st_union(Shape)) %>%
ungroup()
chehalis <- wria.crop %>%
filter(WRIA_ID %in% c(40, 49)) %>%
summarise(geometry = sf::st_union(Shape)) %>%
ungroup()
color_counties <- counties.crop %>%
filter(NAME %in% c("Thurston", "King"))
bw_counties <- counties.crop %>%
filter(NAME %in% c("Snohomish", "Skagit", "Whatcom"))
#Creating centroids for the county PI's
county.filter <- counties.crop %>%
filter(NAME %in% c("Thurston", "King", "Snohomish", "Skagit", "Whatcom"))
#If this next piece doesn't run try unloading the raster library
counties.cents <- cbind(county.filter, st_coordinates(st_centroid(county.filter %>% select(geometry))))
#creating bellingham centroid
bham.cents <- cbind(bham.crs, st_coordinates(st_centroid(bham.crs %>% select(geometry))))
#Plotting PI's
PI_plot <- ggplot() +
geom_sf(data = counties.crop, fill = "grey", color = "grey") +
geom_sf(data = cwcc, fill = "red", alpha = 0.5, color = "red") +
geom_sf(data = chehalis, fill = "red", alpha = 0.5, color = "red") +
geom_sf(data = county.filter, fill = "red", alpha = 0.5, color = "red") +
geom_sf(data = sf_case, alpha = 0, color = "red", size = 1.5) +
geom_sf(data = bham.crs, fill = "red", alpha = 0.5, color = "red") +
geom_text(data = counties.cents, aes(x = X, y = Y, label = NAME)) +
annotate(geom = "text", y = 48.85, x = -122.4, label = "Bellingham", size = 3) +
annotate(geom = "text", y = 47.7, x = -124, label = "CWCC") +
annotate(geom = "text", y = 47.1, x = -123.6, label = "Chehalis") +
geom_point(data = bham.cents, aes(x=X, y=Y)) +
scale_x_continuous(expand = c(0,0),
limits = c(-125.5, -120.54368)) +
scale_y_continuous(expand = c(0,0),
limits = c(46.3, 49.2)) +
theme_void() +
theme(legend.position = "none",
panel.background = element_rect(fill = "lightcyan"))
PI_plot
PI_plotBW <- ggplot() +
geom_sf(data = counties.crop, fill = "grey85", color = "grey85") +
geom_sf(data = cwcc, fill = "grey35", alpha = 0.5, color = "black") +
geom_sf(data = chehalis, fill = "grey35", alpha = 0.5, color = "black") +
geom_sf(data = county.filter, fill = "grey35", alpha = 0.5, color = "black") +
geom_sf(data = sf_case, alpha = 0, color = "black", size = 1.5) +
geom_sf(data = bham.crs, fill = "grey35", alpha = 0.5, color = "black") +
geom_text(data = counties.cents, aes(x = X, y = Y, label = NAME)) +
annotate(geom = "text", y = 48.85, x = -122.4, label = "Bellingham", size = 3) +
annotate(geom = "text", y = 47.7, x = -124, label = "CWCC") +
annotate(geom = "text", y = 47.1, x = -123.6, label = "Chehalis") +
geom_point(data = bham.cents, aes(x=X, y=Y)) +
scale_x_continuous(expand = c(0,0),
limits = c(-125.5, -120.54368)) +
scale_y_continuous(expand = c(0,0),
limits = c(46.3, 49.2)) +
theme_void() +
theme(legend.position = "none")
PI_plotBW
PI_plot_isolatedcolor <- ggplot() +
geom_sf(data = counties.crop, fill = "grey85", color = "grey85") +
geom_sf(data = color_counties, fill = "red", color = "black", alpha = 0.5) +
geom_sf(data = bw_counties, fill = "grey35", color = "black", alpha = 0.5) +
geom_sf(data = cwcc, fill = "red", alpha = 0.5, color = "black") +
geom_sf(data = chehalis, fill = "red", alpha = 0.5, color = "black") +
geom_sf(data = sf_case, alpha = 0, color = "black", size = 1.5) +
geom_sf(data = bham.crs, fill = "red", alpha = 0.5, color = "black") +
geom_text(data = counties.cents, aes(x = X, y = Y, label = NAME)) +
annotate(geom = "text", y = 48.85, x = -122.4, label = "Bellingham", size = 3) +
annotate(geom = "text", y = 47.7, x = -124, label = "CWCC") +
annotate(geom = "text", y = 47.1, x = -123.6, label = "Chehalis") +
geom_point(data = bham.cents, aes(x=X, y=Y)) +
scale_x_continuous(expand = c(0,0),
limits = c(-125.5, -120.54368)) +
scale_y_continuous(expand = c(0,0),
limits = c(46.3, 49.2)) +
theme_void() +
theme(legend.position = "none")
PI_plot_isolatedcolor
#Saving these plots
ggsave(plot = PI_plot, path = here("output/Maps"), filename = "PIPlot.pdf", device = "pdf")
ggsave(plot = PI_plotBW, path = here("output/Maps"), filename = "PIPlotBW.jpg", device = "jpg")
#----------------Adding Inset
#creating subplot panel
#CaseAreaMap
st_bbox(counties)
#  xmin       ymin       xmax       ymax
# -124.73317   45.54354 -116.91599   49.00249
st_bbox(counties.crop)
#      xmin       ymin       xmax       ymax
# -124.73317   46.19709 -120.54368   49.00249
#width
st_bbox(counties)[3] - st_bbox(counties)[1] #= 7.817185
#height
st_bbox(counties)[4] - st_bbox(counties)[2] #=3.458953
#width
st_bbox(counties.crop)[3] - st_bbox(counties.crop)[1] #= 4.189491
#height
st_bbox(counties.crop)[4] - st_bbox(counties.crop)[2] #=2.805402
inset1 <-PI_plot +
annotation_custom(
grob = ggplotGrob(CaseAreaMap),
xmin = -125.5,
xmax = -125.5 + (0.2*7.817185),
ymin = 49.2 - (0.2*3.458953),
ymax = 49.2
)
inset1
inset2 <-PI_plotBW +
annotation_custom(
grob = ggplotGrob(CaseAreaMapBW),
xmin = -125.5,
xmax = -125.5 + (0.2*7.817185),
ymin = 49.2 - (0.2*3.458953),
ymax = 49.2
)
inset2
inset3 <-PI_plot_isolatedcolor +
annotation_custom(
grob = ggplotGrob(CaseAreaMapBW),
xmin = -125.5,
xmax = -125.5 + (0.2*7.817185),
ymin = 49.2 - (0.2*3.458953),
ymax = 49.2
)
inset3
#saving this first version
ggsave(plot = inset1, path = here("output/Maps"), filename = "inset1.jpg", device = "jpg")
ggsave(plot = inset2, path = here("output/Maps"), filename = "inset2.jpg", device = "jpg")
ggsave(plot = inset3, path = here("output/Maps"), filename = "inset3.jpg", device = "jpg")
#Description:
#'Overview map that shows which geographies we found PIs for within the case area.
#-----------Load Libraries
library(sf)
library(spData)
library(tidyverse)
library(here)
library(janitor)
library(patchwork)
library(readxl)
library(ggplot2)
library(rnaturalearth)
library(mapproj)
library(maps)
#----------Inset Plot
#'#Load Data
#Counties Data
counties <- read_sf(here("data", "cb_2018_us_county_5m", "cb_2018_us_county_5m.shp"))
counties = counties %>%
filter(STATEFP == "53") %>%
mutate(GEOID = as.numeric(GEOID)) %>%
rename(COUNTY = GEOID)
# Case area borders
sf_case <- st_read(here("data/WSDOT_-_Fish_Passage_US_v._WA_Case_Area_Boundary-shp/WSDOT_-_Fish_Passage_US_v._WA_Case_Area_Boundary.shp"), quiet = TRUE)
CaseAreaMap <- ggplot() +
geom_sf(data = counties, fill = "grey") +
geom_sf(data = sf_case, fill = "red", color = "red", alpha = .5) +
theme_void()+
theme(legend.position = "none",
panel.background = element_rect(fill = "lightcyan"))
CaseAreaMap
#Black and white version
CaseAreaMapBW <- ggplot() +
geom_sf(data = counties, fill = "white") +
geom_sf(data = sf_case, fill = "grey50", color = "grey", alpha = .5) +
theme_void()+
theme(legend.position = "none")
CaseAreaMapBW
ggsave(plot = CaseAreaMapBW, path = here("output/Maps"), filename = "CaseArea.jpg", device = "jpg")
# Load coastline data
na_countries <- ne_countries(scale = 50, returnclass = "sf", continent = "North America")
# Define a Lambert Conformal Conic projection
crs_albers <- "+proj=utm +zone=10 +datum=WGS84"
# Calculate the bounding box of the states
bbox <- st_bbox(sf_case)
# Create a rectangle for the bounding box
bbox_rect <- st_as_sfc(bbox)
# Plotting with Albers projection
map_key <- ggplot() +
geom_sf(data = na_countries, color = "black") +
geom_sf(data = bbox_rect, fill = NA, color = "black", linewidth = .8) + # Add the bounding box
coord_sf(crs = crs_albers, expand = FALSE) +
theme_minimal() +
xlab("") +
ylab("") +
theme_void()
# Display the plot
map_key
ggsave(here("inset_map.png"), plot = map_key, width = 5, height = 5, dpi = 300)
#---------------Overview Map
#Inputting the WRIA data
st_layers(dsn = here("data/WR_WAT_WRIA.gdb")) #layer name: Water_Resource_Inventory_Areas
wria <- read_sf(dsn = here("data/WR_WAT_WRIA.gdb"), layer = "Water_Resource_Inventory_Areas")
#Inputting Bellingham geometry
bham <- read_sf(here("data/bham_geom/COB_plan_CityUGAs.shp"))
#change CRS
bham.crs <- st_transform(bham, crs = st_crs(counties))
bham.crs <- bham.crs %>%
filter(CITYUGA == "CITY")
wria.crs <- st_transform(wria, crs = st_crs(counties))
#Next I would like to create a cropped version
#First I'll make a bounding box within the Case Area for the county and the WRIA geometries
counties.crop <- st_crop(counties,
xmin = -125.124714, xmax = -120.543683,
ymin = 46.197092, ymax = 49.002210)
wria.crop <- st_crop(wria.crs,
xmin = -125.124714, xmax = -120.543683,
ymin = 46.197092, ymax = 49.002210)
#Creating centroids for the WRIA names
wria.cents <- cbind(wria.crop, st_coordinates(st_centroid(wria.crop %>% select(Shape))))
#Here is the cropped plot showing the case area with all the counties and the wria's
ggplot() +
geom_sf(data = wria.crop, alpha = 0)+
geom_sf(data = counties.crop, alpha = 0)+
geom_sf(data = sf_case, alpha = 0, color = "red") +
theme_void()+
theme(legend.position = "none") +
geom_text(data = wria.cents, aes(x = X, y = Y, label = WRIA_ID))
#now I'm going to start subsetting to create layers that show the different PI's
#I want to merge the WRIA ID for each PI so that the geometries aren't divided by wria boundaries
cwcc <- wria.crop %>%
filter(WRIA_ID %in% c(15, 35)) %>%
summarise(geometry = sf::st_union(Shape)) %>%
ungroup()
chehalis <- wria.crop %>%
filter(WRIA_ID %in% c(40, 49)) %>%
summarise(geometry = sf::st_union(Shape)) %>%
ungroup()
color_counties <- counties.crop %>%
filter(NAME %in% c("Thurston", "King"))
bw_counties <- counties.crop %>%
filter(NAME %in% c("Snohomish", "Skagit", "Whatcom"))
#Creating centroids for the county PI's
county.filter <- counties.crop %>%
filter(NAME %in% c("Thurston", "King", "Snohomish", "Skagit", "Whatcom"))
#If this next piece doesn't run try unloading the raster library
counties.cents <- cbind(county.filter, st_coordinates(st_centroid(county.filter %>% select(geometry))))
#creating bellingham centroid
bham.cents <- cbind(bham.crs, st_coordinates(st_centroid(bham.crs %>% select(geometry))))
#Plotting PI's
PI_plot <- ggplot() +
geom_sf(data = counties.crop, fill = "grey", color = "grey") +
geom_sf(data = cwcc, fill = "red", alpha = 0.5, color = "red") +
geom_sf(data = chehalis, fill = "red", alpha = 0.5, color = "red") +
geom_sf(data = county.filter, fill = "red", alpha = 0.5, color = "red") +
geom_sf(data = sf_case, alpha = 0, color = "red", size = 1.5) +
geom_sf(data = bham.crs, fill = "red", alpha = 0.5, color = "red") +
geom_text(data = counties.cents, aes(x = X, y = Y, label = NAME)) +
annotate(geom = "text", y = 48.85, x = -122.4, label = "Bellingham", size = 3) +
annotate(geom = "text", y = 47.7, x = -124, label = "CWCC") +
annotate(geom = "text", y = 47.1, x = -123.6, label = "Chehalis") +
geom_point(data = bham.cents, aes(x=X, y=Y)) +
scale_x_continuous(expand = c(0,0),
limits = c(-125.5, -120.54368)) +
scale_y_continuous(expand = c(0,0),
limits = c(46.3, 49.2)) +
theme_void() +
theme(legend.position = "none",
panel.background = element_rect(fill = "lightcyan"))
PI_plot
PI_plotBW <- ggplot() +
geom_sf(data = counties.crop, fill = "grey85", color = "grey85") +
geom_sf(data = cwcc, fill = "grey35", alpha = 0.5, color = "black") +
geom_sf(data = chehalis, fill = "grey35", alpha = 0.5, color = "black") +
geom_sf(data = county.filter, fill = "grey35", alpha = 0.5, color = "black") +
geom_sf(data = sf_case, alpha = 0, color = "black", size = 1.5) +
geom_sf(data = bham.crs, fill = "grey35", alpha = 0.5, color = "black") +
geom_text(data = counties.cents, aes(x = X, y = Y, label = NAME)) +
annotate(geom = "text", y = 48.85, x = -122.4, label = "Bellingham", size = 3) +
annotate(geom = "text", y = 47.7, x = -124, label = "CWCC") +
annotate(geom = "text", y = 47.1, x = -123.6, label = "Chehalis") +
geom_point(data = bham.cents, aes(x=X, y=Y)) +
scale_x_continuous(expand = c(0,0),
limits = c(-125.5, -120.54368)) +
scale_y_continuous(expand = c(0,0),
limits = c(46.3, 49.2)) +
theme_void() +
theme(legend.position = "none")
PI_plotBW
PI_plot_isolatedcolor <- ggplot() +
geom_sf(data = counties.crop, fill = "grey85", color = "grey85") +
geom_sf(data = color_counties, fill = "red", color = "black", alpha = 0.5) +
geom_sf(data = bw_counties, fill = "grey35", color = "black", alpha = 0.5) +
geom_sf(data = cwcc, fill = "red", alpha = 0.5, color = "black") +
geom_sf(data = chehalis, fill = "red", alpha = 0.5, color = "black") +
geom_sf(data = sf_case, alpha = 0, color = "black", size = 1.5) +
geom_sf(data = bham.crs, fill = "red", alpha = 0.5, color = "black") +
geom_text(data = counties.cents, aes(x = X, y = Y, label = NAME)) +
annotate(geom = "text", y = 48.85, x = -122.4, label = "Bellingham", size = 3) +
annotate(geom = "text", y = 47.7, x = -124, label = "CWCC") +
annotate(geom = "text", y = 47.1, x = -123.6, label = "Chehalis") +
geom_point(data = bham.cents, aes(x=X, y=Y)) +
scale_x_continuous(expand = c(0,0),
limits = c(-125.5, -120.54368)) +
scale_y_continuous(expand = c(0,0),
limits = c(46.3, 49.2)) +
theme_void() +
theme(legend.position = "none")
PI_plot_isolatedcolor
#Saving these plots
ggsave(plot = PI_plot, path = here("output/Maps"), filename = "PIPlot.pdf", device = "pdf")
ggsave(plot = PI_plotBW, path = here("output/Maps"), filename = "PIPlotBW.jpg", device = "jpg")
#----------------Adding Inset
#creating subplot panel
#CaseAreaMap
st_bbox(counties)
#  xmin       ymin       xmax       ymax
# -124.73317   45.54354 -116.91599   49.00249
st_bbox(counties.crop)
#      xmin       ymin       xmax       ymax
# -124.73317   46.19709 -120.54368   49.00249
#width
st_bbox(counties)[3] - st_bbox(counties)[1] #= 7.817185
#height
st_bbox(counties)[4] - st_bbox(counties)[2] #=3.458953
#width
st_bbox(counties.crop)[3] - st_bbox(counties.crop)[1] #= 4.189491
#height
st_bbox(counties.crop)[4] - st_bbox(counties.crop)[2] #=2.805402
inset1 <-PI_plot +
annotation_custom(
grob = ggplotGrob(CaseAreaMap),
xmin = -125.5,
xmax = -125.5 + (0.2*7.817185),
ymin = 49.2 - (0.2*3.458953),
ymax = 49.2
)
inset1
inset2 <-PI_plotBW +
annotation_custom(
grob = ggplotGrob(CaseAreaMapBW),
xmin = -125.5,
xmax = -125.5 + (0.2*7.817185),
ymin = 49.2 - (0.2*3.458953),
ymax = 49.2
)
inset2
inset3 <-PI_plot_isolatedcolor +
annotation_custom(
grob = ggplotGrob(CaseAreaMapBW),
xmin = -125.5,
xmax = -125.5 + (0.2*7.817185),
ymin = 49.2 - (0.2*3.458953),
ymax = 49.2
)
inset3
#saving this first version
ggsave(plot = inset1, path = here("output/Maps"), filename = "inset1.jpg", device = "jpg")
ggsave(plot = inset2, path = here("output/Maps"), filename = "inset2.jpg", device = "jpg")
ggsave(plot = inset3, path = here("output/Maps"), filename = "inset3.jpg", device = "jpg")
CaseAreaMap
CaseAreaMapBW
map_key
PI_plot
PI_plotBW
PI_plot_isolatedcolor
inset1
inset2
inset3
ggsave(here("output/Maps/inset_map.png"), plot = map_key, width = 5, height = 5, dpi = 300)
ggsave(here("output/Maps/inset_map.png"), plot = map_key, width = 5, height = 5, dpi = 300)
